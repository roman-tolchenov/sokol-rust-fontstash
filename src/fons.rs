/* automatically generated by rust-bindgen 0.71.1 */

pub const FONS_INVALID: i32 = -1;
pub const FONSflags_FONS_ZERO_TOPLEFT: FONSflags = 1;
pub const FONSflags_FONS_ZERO_BOTTOMLEFT: FONSflags = 2;
pub type FONSflags = ::std::os::raw::c_int;
pub const FONSalign_FONS_ALIGN_LEFT: FONSalign = 1;
pub const FONSalign_FONS_ALIGN_CENTER: FONSalign = 2;
pub const FONSalign_FONS_ALIGN_RIGHT: FONSalign = 4;
pub const FONSalign_FONS_ALIGN_TOP: FONSalign = 8;
pub const FONSalign_FONS_ALIGN_MIDDLE: FONSalign = 16;
pub const FONSalign_FONS_ALIGN_BOTTOM: FONSalign = 32;
pub const FONSalign_FONS_ALIGN_BASELINE: FONSalign = 64;
pub type FONSalign = ::std::os::raw::c_int;
pub const FONSerrorCode_FONS_ATLAS_FULL: FONSerrorCode = 1;
pub const FONSerrorCode_FONS_SCRATCH_FULL: FONSerrorCode = 2;
pub const FONSerrorCode_FONS_STATES_OVERFLOW: FONSerrorCode = 3;
pub const FONSerrorCode_FONS_STATES_UNDERFLOW: FONSerrorCode = 4;
pub type FONSerrorCode = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FONSparams {
    pub width: ::std::os::raw::c_int,
    pub height: ::std::os::raw::c_int,
    pub flags: ::std::os::raw::c_uchar,
    pub userPtr: *mut ::std::os::raw::c_void,
    pub renderCreate: ::std::option::Option<
        unsafe extern "C" fn(
            uptr: *mut ::std::os::raw::c_void,
            width: ::std::os::raw::c_int,
            height: ::std::os::raw::c_int,
        ) -> ::std::os::raw::c_int,
    >,
    pub renderResize: ::std::option::Option<
        unsafe extern "C" fn(
            uptr: *mut ::std::os::raw::c_void,
            width: ::std::os::raw::c_int,
            height: ::std::os::raw::c_int,
        ) -> ::std::os::raw::c_int,
    >,
    pub renderUpdate: ::std::option::Option<
        unsafe extern "C" fn(
            uptr: *mut ::std::os::raw::c_void,
            rect: *mut ::std::os::raw::c_int,
            data: *const ::std::os::raw::c_uchar,
        ),
    >,
    pub renderDraw: ::std::option::Option<
        unsafe extern "C" fn(
            uptr: *mut ::std::os::raw::c_void,
            verts: *const f32,
            tcoords: *const f32,
            colors: *const ::std::os::raw::c_uint,
            nverts: ::std::os::raw::c_int,
        ),
    >,
    pub renderDelete:
        ::std::option::Option<unsafe extern "C" fn(uptr: *mut ::std::os::raw::c_void)>,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of FONSparams"][::std::mem::size_of::<FONSparams>() - 64usize];
    ["Alignment of FONSparams"][::std::mem::align_of::<FONSparams>() - 8usize];
    ["Offset of field: FONSparams::width"][::std::mem::offset_of!(FONSparams, width) - 0usize];
    ["Offset of field: FONSparams::height"][::std::mem::offset_of!(FONSparams, height) - 4usize];
    ["Offset of field: FONSparams::flags"][::std::mem::offset_of!(FONSparams, flags) - 8usize];
    ["Offset of field: FONSparams::userPtr"][::std::mem::offset_of!(FONSparams, userPtr) - 16usize];
    ["Offset of field: FONSparams::renderCreate"]
        [::std::mem::offset_of!(FONSparams, renderCreate) - 24usize];
    ["Offset of field: FONSparams::renderResize"]
        [::std::mem::offset_of!(FONSparams, renderResize) - 32usize];
    ["Offset of field: FONSparams::renderUpdate"]
        [::std::mem::offset_of!(FONSparams, renderUpdate) - 40usize];
    ["Offset of field: FONSparams::renderDraw"]
        [::std::mem::offset_of!(FONSparams, renderDraw) - 48usize];
    ["Offset of field: FONSparams::renderDelete"]
        [::std::mem::offset_of!(FONSparams, renderDelete) - 56usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FONSquad {
    pub x0: f32,
    pub y0: f32,
    pub s0: f32,
    pub t0: f32,
    pub x1: f32,
    pub y1: f32,
    pub s1: f32,
    pub t1: f32,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of FONSquad"][::std::mem::size_of::<FONSquad>() - 32usize];
    ["Alignment of FONSquad"][::std::mem::align_of::<FONSquad>() - 4usize];
    ["Offset of field: FONSquad::x0"][::std::mem::offset_of!(FONSquad, x0) - 0usize];
    ["Offset of field: FONSquad::y0"][::std::mem::offset_of!(FONSquad, y0) - 4usize];
    ["Offset of field: FONSquad::s0"][::std::mem::offset_of!(FONSquad, s0) - 8usize];
    ["Offset of field: FONSquad::t0"][::std::mem::offset_of!(FONSquad, t0) - 12usize];
    ["Offset of field: FONSquad::x1"][::std::mem::offset_of!(FONSquad, x1) - 16usize];
    ["Offset of field: FONSquad::y1"][::std::mem::offset_of!(FONSquad, y1) - 20usize];
    ["Offset of field: FONSquad::s1"][::std::mem::offset_of!(FONSquad, s1) - 24usize];
    ["Offset of field: FONSquad::t1"][::std::mem::offset_of!(FONSquad, t1) - 28usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FONStextIter {
    pub x: f32,
    pub y: f32,
    pub nextx: f32,
    pub nexty: f32,
    pub scale: f32,
    pub spacing: f32,
    pub codepoint: ::std::os::raw::c_uint,
    pub isize_: ::std::os::raw::c_short,
    pub iblur: ::std::os::raw::c_short,
    pub font: *mut FONSfont,
    pub prevGlyphIndex: ::std::os::raw::c_int,
    pub str_: *const ::std::os::raw::c_char,
    pub next: *const ::std::os::raw::c_char,
    pub end: *const ::std::os::raw::c_char,
    pub utf8state: ::std::os::raw::c_uint,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of FONStextIter"][::std::mem::size_of::<FONStextIter>() - 80usize];
    ["Alignment of FONStextIter"][::std::mem::align_of::<FONStextIter>() - 8usize];
    ["Offset of field: FONStextIter::x"][::std::mem::offset_of!(FONStextIter, x) - 0usize];
    ["Offset of field: FONStextIter::y"][::std::mem::offset_of!(FONStextIter, y) - 4usize];
    ["Offset of field: FONStextIter::nextx"][::std::mem::offset_of!(FONStextIter, nextx) - 8usize];
    ["Offset of field: FONStextIter::nexty"][::std::mem::offset_of!(FONStextIter, nexty) - 12usize];
    ["Offset of field: FONStextIter::scale"][::std::mem::offset_of!(FONStextIter, scale) - 16usize];
    ["Offset of field: FONStextIter::spacing"]
        [::std::mem::offset_of!(FONStextIter, spacing) - 20usize];
    ["Offset of field: FONStextIter::codepoint"]
        [::std::mem::offset_of!(FONStextIter, codepoint) - 24usize];
    ["Offset of field: FONStextIter::isize_"]
        [::std::mem::offset_of!(FONStextIter, isize_) - 28usize];
    ["Offset of field: FONStextIter::iblur"][::std::mem::offset_of!(FONStextIter, iblur) - 30usize];
    ["Offset of field: FONStextIter::font"][::std::mem::offset_of!(FONStextIter, font) - 32usize];
    ["Offset of field: FONStextIter::prevGlyphIndex"]
        [::std::mem::offset_of!(FONStextIter, prevGlyphIndex) - 40usize];
    ["Offset of field: FONStextIter::str_"][::std::mem::offset_of!(FONStextIter, str_) - 48usize];
    ["Offset of field: FONStextIter::next"][::std::mem::offset_of!(FONStextIter, next) - 56usize];
    ["Offset of field: FONStextIter::end"][::std::mem::offset_of!(FONStextIter, end) - 64usize];
    ["Offset of field: FONStextIter::utf8state"]
        [::std::mem::offset_of!(FONStextIter, utf8state) - 72usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FONScontext {
    _unused: [u8; 0],
}
unsafe extern "C" {
    pub fn fonsCreateInternal(params: *mut FONSparams) -> *mut FONScontext;
}
unsafe extern "C" {
    pub fn fonsDeleteInternal(s: *mut FONScontext);
}
unsafe extern "C" {
    pub fn fonsSetErrorCallback(
        s: *mut FONScontext,
        callback: ::std::option::Option<
            unsafe extern "C" fn(
                uptr: *mut ::std::os::raw::c_void,
                error: ::std::os::raw::c_int,
                val: ::std::os::raw::c_int,
            ),
        >,
        uptr: *mut ::std::os::raw::c_void,
    );
}
unsafe extern "C" {
    pub fn fonsGetAtlasSize(
        s: *mut FONScontext,
        width: *mut ::std::os::raw::c_int,
        height: *mut ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn fonsExpandAtlas(
        s: *mut FONScontext,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn fonsResetAtlas(
        stash: *mut FONScontext,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn fonsGetFontByName(
        s: *mut FONScontext,
        name: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn fonsAddFallbackFont(
        stash: *mut FONScontext,
        base: ::std::os::raw::c_int,
        fallback: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn fonsPushState(s: *mut FONScontext);
}
unsafe extern "C" {
    pub fn fonsPopState(s: *mut FONScontext);
}
unsafe extern "C" {
    pub fn fonsClearState(s: *mut FONScontext);
}
unsafe extern "C" {
    pub fn fonsSetSize(s: *mut FONScontext, size: f32);
}
unsafe extern "C" {
    pub fn fonsSetColor(s: *mut FONScontext, color: ::std::os::raw::c_uint);
}
unsafe extern "C" {
    pub fn fonsSetSpacing(s: *mut FONScontext, spacing: f32);
}
unsafe extern "C" {
    pub fn fonsSetBlur(s: *mut FONScontext, blur: f32);
}
unsafe extern "C" {
    pub fn fonsSetAlign(s: *mut FONScontext, align: ::std::os::raw::c_int);
}
unsafe extern "C" {
    pub fn fonsSetFont(s: *mut FONScontext, font: ::std::os::raw::c_int);
}
unsafe extern "C" {
    pub fn fonsDrawText(
        s: *mut FONScontext,
        x: f32,
        y: f32,
        string: *const ::std::os::raw::c_char,
        end: *const ::std::os::raw::c_char,
    ) -> f32;
}
unsafe extern "C" {
    pub fn fonsTextBounds(
        s: *mut FONScontext,
        x: f32,
        y: f32,
        string: *const ::std::os::raw::c_char,
        end: *const ::std::os::raw::c_char,
        bounds: *mut f32,
    ) -> f32;
}
unsafe extern "C" {
    pub fn fonsLineBounds(s: *mut FONScontext, y: f32, miny: *mut f32, maxy: *mut f32);
}
unsafe extern "C" {
    pub fn fonsVertMetrics(
        s: *mut FONScontext,
        ascender: *mut f32,
        descender: *mut f32,
        lineh: *mut f32,
    );
}
unsafe extern "C" {
    pub fn fonsTextIterInit(
        stash: *mut FONScontext,
        iter: *mut FONStextIter,
        x: f32,
        y: f32,
        str_: *const ::std::os::raw::c_char,
        end: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn fonsTextIterNext(
        stash: *mut FONScontext,
        iter: *mut FONStextIter,
        quad: *mut FONSquad,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn fonsGetTextureData(
        stash: *mut FONScontext,
        width: *mut ::std::os::raw::c_int,
        height: *mut ::std::os::raw::c_int,
    ) -> *const ::std::os::raw::c_uchar;
}
unsafe extern "C" {
    pub fn fonsValidateTexture(
        s: *mut FONScontext,
        dirty: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn fonsDrawDebug(s: *mut FONScontext, x: f32, y: f32);
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FONSfont {
    pub _address: u8,
}
